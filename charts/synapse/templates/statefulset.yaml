apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "synapse.fullname" . }}
  labels:
    {{- include "synapse.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "synapse.selectorLabels" . | nindent 6 }}
  serviceName: {{ template "synapse.fullname" . }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      labels:
        {{- include "synapse.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "synapse.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: init-scripts
          configMap:
            name: {{ template "synapse.fullname" . }}-init
        - name: config
          configMap:
        {{- if .Values.existingConfigMap }}
            name: {{ .Values.existingConfigMap }}
        {{- else }}
            name: {{ template "synapse.fullname" . }}
        {{- end }}
        {{- if not .Values.persistence.enabled }}
        - name: "data"
          emptyDir: {}
        {{- else if .Values.persistence.existingClaim }}
        - name: "data"
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
        {{- end }}
      initContainers:
        - name: {{ .Chart.Name }}-init
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: SYNAPSE_SERVER_NAME
              value: "{{ .Values.config.server_name }}"
            - name: SYNAPSE_REPORT_STATS
              value: "{{ .Values.config.report_stats }}"
            - name: SYNAPSE_CONFIG_PATH
              value: /config/homeserver.yaml
            - name: SYNAPSE_DATA_DIRECTORY
              value: /data
          volumeMounts:
          - name: data
            mountPath: {{ .Values.persistence.path }}
            subPath: {{ .Values.persistence.subPath }}
          - name: init-scripts
            mountPath: /init
          - name: config
            mountPath: /config
          command: ["/bin/sh"]
          args: ["/init/script.sh"]
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: SYNAPSE_CONFIG_PATH
              value: /config/homeserver.yaml
          volumeMounts:
          - name: data
            mountPath: {{ .Values.persistence.path }}
            subPath: {{ .Values.persistence.subPath }}
          - name: config
            mountPath: /config
          ports:
            - name: synapse
              containerPort: 8008
              protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
  {{- if and .Values.persistence.enabled (not .Values.persistence.existingClaim) }}
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          app: {{ template "synapse.name" . }}
          release: {{ .Release.Name }}
          heritage: {{ .Release.Service }}
      spec:
        accessModes:
        {{- range .Values.persistence.accessModes }}
          - {{ . | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
        {{ include "synapse.storageClass" . }}
        selector:
        {{- if .Values.persistence.matchLabels }}
          matchLabels:
{{ toYaml .Values.persistence.matchLabels | indent 12 }}
        {{- end -}}
        {{- if .Values.persistence.matchExpressions }}
          matchExpressions:
{{ toYaml .Values.persistence.matchExpressions | indent 12 }}
        {{- end -}}
  {{- end }}